Lingua::Align - a toolbox for Tree Alignment
    Lingua::Align is a collection of command-line tools for automatic tree
    and word alignment of parallel corpora. The main purpose is to provide
    an experimental toolbox for experiments with various feature sets and
    alignment strategies. Alignment is based on local classification and
    alignment inference. The local classifier is typically trained on
    available aligned training data. We use a log-linear model for
    discriminative binary classification using the maximum entropy learning
    package megam (Hal Daume III).

Installation
    You can either install the perl modules and binaries as usual:

       perl Makefile.PL
       make
       make install

    Or you can simply run the treealign script (and the other tools) in the
    "bin/" directory without changing anything. The only requirement is a
    recent version of Perl and "XML::Parser" installed on your system (the
    Perl wrapper for the Expat XML parser).

    The Tree Aligner calls an external tool (megam) which is provided as a
    pre-compiled binary in the "bin/" directory. The default version is a
    i686 binary for Linux-based systems. The package also includes a binary
    for Intel-based Mac OS X. If you want to use this version, please change
    the link "bin/megam" to point to "bin/megam.osx". For all other
    platforms please download the source from
    <http://www.cs.utah.edu/~hal/megam/> and compile it on you platform.
    Make sure that the binary works and link it to "bin/megam".

    For some features you will need word alignment information. To produce
    these features you need to run tools such as Giza++
    <http://code.google.com/p/giza-pp/> and Moses
    <http://statmt.org/moses/>.

Documentation
    There are several man-pages generated from the "pod" information in the
    Perl modules and scripts included in Lingua::Align. Look at the
    following pages:

    Lingua::treealign
    Lingua::treealigneval
    Lingua::Align
    Lingua::Align::Trees
    Lingua::Align::Features
    Lingua::Align::LinkSearch
    Lingua::Align::Corpus
    Lingua::coocfreq
    Lingua::convert_treebank
    Lingua::sta2moses
    Lingua::sta2phrases

    Here are some publications (please cite if you use the software)

    Tiedemann, J. Lingua-Align: An Experimental Toolbox for Automatic
    Tree-to-Tree Alignment. In Proceedings of the 7th International
    Conference on Language Resources and Evaluation (LREC'2010), 2010.
    <http://stp.lingfil.uu.se/~joerg/published/lrec2010.pdf>,

    Tiedemann, J. and Kotzé, G. Building a Large Machine-Aligned Parallel
    Treebank. In Proceedings of the 8th International Workshop on Treebanks
    and Linguistic Theories (TLT'08), pages 197-208, EDUCatt, Milano/Italy,
    2009. <http://stp.lingfil.uu.se/~joerg/published/tlt09.pdf>,

    Tiedemann, J. and Kotzé, G. A Discriminative Approach to Tree
    Alignment. In Proceedings of the International Workshop on Natural
    Language Processing Methods and Corpora in Translation, Lexicography and
    Language Learning (in connection with RANLP'09), pages 33 - 39, 2009.
    <http://stp.lingfil.uu.se/~joerg/published/ranlp09_tree.pdf>,

Quickstart
    The easiest way to use the Tree Aligner is to run the frontend script
    treealign in the bin directory. There are many options and command-line
    arguments that can be used to adjust the behaviour of the alignment
    tools. Have a look at Lingua::treealign for more information.

    For a simple test: go to the directory "europarl" and run "make test".

      cd europarl
      make test

    This will run a simple test with only a few training sentences from the
    Europarl corpus and simple features for classification. The test
    consists of two calls to tree aligner scripts: "treealign" is used to
    train a classifier and to align unseen sentences from the given data
    set. "treealigneval" is used to compute scores of the alignment
    performed with that model and the alignment strategy that is chosen.

    The example training data is stored in "europarl/nl-en-weak_125.xml"
    which has been produced by manual alignment (thanks to Gideon Kotze)
    using the Stockholm Tree Aligner
    <http://kitt.cl.uzh.ch/kitt/treealigner>. The format looks like this:

     <?xml version="1.0" encoding="UTF-8"?>
     <treealign subversion="3" version="2">
     <head>
     ...
       <treebanks>
         <treebank id="en" filename="ep-00-12-15.125.en.tiger"/>
         <treebank id="nl" filename="ep-00-12-15.125.nl.tiger"/>
       </treebanks>
     ...
     </head>
     <alignments>
       <align type="good" last_change="2010-03-29" author="Gideon">
         <node treebank_id="en" node_id="s5_501"/>
         <node treebank_id="nl" node_id="s10_0"/>
       </align>
       <align type="good" last_change="2010-03-29" author="Gideon">
         <node treebank_id="en" node_id="s5_502"/>
         <node treebank_id="nl" node_id="s10_1"/>
       </align>
     ...

    The actual treebank data is stored in TigerXML (in this case) and links
    are pointers to these documents using the unique node IDs. This should
    be quite straightforward (looking at the example above). Other formats
    are also supported, for example, Penn Treebank format and AlpinoXML for
    storing treebanks. There is also support for other alignment formats
    like the tree alignment format used by the Dublin Subtree Aligner and
    word alignment formats used by Giza++, Moses and shared tasks on word
    alignment (WPT2003).

    What you need for running your own experiments:

    training data
        Your own tree-aligned training data. The easiest way is to use the
        Stockholm Tree Aligner. The format produced by this tool can
        directly be used by Lingua::Align. You need at least 100 pairs of
        parse trees in order to obtain reasonable results. More is better of
        course. The corpus has to be parsed on both sides. You need to use
        TigerXML for the Stockholm Tree Aligner and this is also most
        convenient for the tree aligner later on (also for visualizing
        automatic alignment).

        There is a tool to convert treebanks using the formats supported by
        Lingua::Align: "bin/convert_treebank". For example, if your parse
        trees are stored in Penn Treebank format ("treebank") you might try
        to use the following command:

          convert_treebank treebank penn tiger > treebank.tiger

        Hopefully this will work to create a corpus that can be loaded into
        the Stockholm Tree Aligner. You might have to check the
        specifications in the XML header and adjust some (meta) information.

    features & parameters
Main concepts
Author
    Joerg Tiedemann, <jorg.tiedemann@lingfil.uu.se>

COPYRIGHT AND LICENSE
    Copyright (C) 2009, 2010 by Joerg Tiedemann, Gideon Kotze

    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself, either Perl version 5.8.8 or, at
    your option, any later version of Perl 5 you may have available.

